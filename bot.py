import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
import sqlite3

TOKEN = '7861896848:AAHJk1QcelFZ1owB0LO4XXNFflBz-WDZBIE'
bot = telebot.TeleBot(TOKEN)
bot.remove_webhook()

# /start ‚Äî –≤—ã–±–æ—Ä –±—Ä–µ–Ω–¥–∞
@bot.message_handler(commands=['start'])
def start(message):
    markup = InlineKeyboardMarkup(row_width=2)
    markup.add(
        InlineKeyboardButton("üì± Samsung", callback_data="brand_Samsung"),
        InlineKeyboardButton("üì± iPhone", callback_data="brand_iPhone"),
        InlineKeyboardButton("üì± Redmi", callback_data="brand_Redmi"),
        InlineKeyboardButton("üì± Infinix", callback_data="brand_Infinix")
    )
    bot.send_message(
        message.chat.id,
        "üì± <b>–•–£–® –û–ú–ê–î–ï–î –ë–ê EKRAN.TJ-KBS</b>
üëá <b>–ú–∞—Ä–∫–∞–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∏ —Ö—É–¥—Ä–æ –∏–Ω—Ç–∏—Ö–æ–± –Ω–∞–º–æ–µ–¥:</b>",
        reply_markup=markup,
        parse_mode='HTML'
    )

# –í—ã–±–æ—Ä –∫–∞—á–µ—Å—Ç–≤–∞ –ø–æ—Å–ª–µ –±—Ä–µ–Ω–¥–∞
@bot.callback_query_handler(func=lambda call: call.data.startswith("brand_"))
def choose_quality(call):
    brand = call.data.split("_")[1]
    if brand == "Samsung":
        markup = InlineKeyboardMarkup()
        markup.row(
            InlineKeyboardButton("üì¶ Original", callback_data="cat_Samsung_Original"),
            InlineKeyboardButton("üí° OLED", callback_data="cat_Samsung_Oled"),
            InlineKeyboardButton("üß© Incell", callback_data="cat_Samsung_Incell")
        )
        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text="üîß <b>–ú–æ —ç–∫—Ä–∞–Ω“≥–æ–∏ Samsung –¥–æ—Ä–µ–º –±–æ —Å–∏—Ñ–∞—Ç“≥–æ–∏ –∑–µ—Ä–∏–Ω:</b>
–ò–Ω—Ç–∏—Ö–æ–± –∫—É–Ω–µ–¥ ‚¨áÔ∏è",
            reply_markup=markup,
            parse_mode='HTML'
        )
    else:
        bot.answer_callback_query(call.id, "“≤–æ–ª–æ —Ç–∞–Ω“≥–æ Samsung –¥–∞—Å—Ç—Ä–∞—Å –∞—Å—Ç.")

# –ü–æ–∫–∞–∑ –º–æ–¥–µ–ª–µ–π
@bot.callback_query_handler(func=lambda call: call.data.startswith("cat_Samsung_"))
def show_models(call):
    quality = call.data.split("_")[2]
    conn = sqlite3.connect("telegram_catalog.db")
    cursor = conn.cursor()
    cursor.execute("SELECT id, model FROM samsung_catalog WHERE quality=?", (quality,))
    items = cursor.fetchall()
    conn.close()

    markup = InlineKeyboardMarkup()
    for item in items:
        markup.add(InlineKeyboardButton(item[1], callback_data=f"prod_{item[0]}"))
    bot.edit_message_text(
        f"üì¶ –ú–æ–¥–µ–ª“≥–æ–∏ Samsung –±–æ —Å–∏—Ñ–∞—Ç–∏: <b>{quality}</b>",
        call.message.chat.id,
        call.message.message_id,
        reply_markup=markup,
        parse_mode='HTML'
    )

# –ü–æ–∫–∞–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–æ–¥–µ–ª–∏
@bot.callback_query_handler(func=lambda call: call.data.startswith("prod_"))
def show_product(call):
    prod_id = call.data.split("_")[1]
    conn = sqlite3.connect("telegram_catalog.db")
    cursor = conn.cursor()
    cursor.execute("SELECT model, quality, brand, price, photo_url FROM samsung_catalog WHERE id=?", (prod_id,))
    result = cursor.fetchone()
    conn.close()

    if result:
        model, quality, brand, price, photo_url = result
        text = f"üì± <b>{model}</b>\nüõ† <b>–ö–∞—á–µ—Å—Ç–≤–æ:</b> {quality}\nüè∑ <b>–ë—Ä–µ–Ω–¥:</b> {brand}\nüí∞ <b>–¶–µ–Ω–∞:</b> {price} —Å–æ–º–æ–Ω”£"
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton("üõí –ó–∞–∫–∞–∑–∞—Ç—å", callback_data=f"order_{prod_id}"))
        bot.send_photo(call.message.chat.id, photo=photo_url, caption=text, parse_mode='HTML', reply_markup=markup)

# –ó–∞–∫–∞–∑
@bot.callback_query_handler(func=lambda call: call.data.startswith("order_"))
def handle_order(call):
    bot.send_message(
        call.message.chat.id,
        "üì¶ –ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à–µ –∏–º—è, –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞. –ú—ã —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è!"
    )

bot.polling()
